version: "3.7"
services:
  reverse-proxy:
    image: traefik:2.2
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.email=${LETSENCRYPT_USER}"
      - "--certificatesResolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.tlsChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--metrics.influxdb=true"
      - "--metrics.influxdb.address=influxdb:8089"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    # Dynamic Configuration
    labels:
       # Redirect all HTTP to HTTPS permanently
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=joan:$$2y$$05$$LJEWyCCFuKVJ/rrDj/H8g.wHsjml8LyM8BjRlo.QHxmpn8qZzJwH6"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.entrypoints=websecure"

  influxdb:
    image: influxdb:1.8
    restart: unless-stopped
    ports:
      - '8086:8086'
    volumes:
      - /opt/influxdb/storage:/var/lib/influxdb
      - /opt/influxdb/backups:/var/tmp/backups
    labels:
      - "traefik.http.routers.influxdb.rule=Host(`stats.${BASE_DOMAIN}`)"
    environment:
      # https://docs.influxdata.com/influxdb/v1.8/administration/config/#influxdb-environment-variables-influxdb
      - INFLUXDB_DB=naturbana
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_HTTP_SHARED_SECRET=${INFLUXDB_HTTP_SHARED_SECRET}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_READ_USER=${INFLUXDB_READ_USER}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD}
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
      - INFLUXDB_COORDINATOR_LOG_QUERIES_AFTER=5s
      # Enable UDP to receive stats from traefik. port not visible from outside.
      - INFLUXDB_UDP_ENABLED=true
      - INFLUXDB_UDP_DATABASE=traefik
    depends_on: [reverse-proxy]

  chronograf:
    image: chronograf:1.8
    restart: unless-stopped
    volumes:
      - /opt/chronograf/storage:/var/lib/chronograf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chronograf.rule=Host(`chronograf.${BASE_DOMAIN}`)"
      - "traefik.http.routers.chronograf.entrypoints=websecure"
      - "traefik.http.routers.chronograf.tls.certresolver=letsencrypt"
      - "traefik.http.services.chronograf.loadbalancer.server.port=8888"
      - "traefik.http.routers.chronograf.middlewares=chronograf-auth"
      - "traefik.http.middlewares.chronograf-auth.basicauth.users=joan:$$2y$$05$$LJEWyCCFuKVJ/rrDj/H8g.wHsjml8LyM8BjRlo.QHxmpn8qZzJwH6"
    environment:
      # https://docs.influxdata.com/chronograf/v1.8/administration/config-options/#chronograf-service-options
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - KAPACITOR_URL=http://kapacitor:9092
      - REPORTING_DISABLED=true
    depends_on: [influxdb, kapacitor]

  grafana:
    image: grafana/grafana:7.1.1
    restart: unless-stopped
    user: ${GRAFANA_USER_ID}
    volumes:
      - /opt/grafana/storage:/var/lib/grafana
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/all.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${BASE_DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      # https://grafana.com/docs/grafana/latest/installation/configuration/#configure-with-environment-variables
      - GF_SERVER_ROOT_URL=https://grafana.${BASE_DOMAIN}/
      - GF_SERVER_ENABLE_GZIP=true
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_ANALYTICS_GOOGLE_ANALYTICS_UA_ID=${GOOGLE_ANALYTICS_UA_ID}
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1m
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}:${SMTP_PORT}
      - GF_SMTP_FROM_ADDRESS=${EMAIL_FROM}
      - GF_SMTP_FROM_NAME=${EMAIL_FROM_NAME}
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=info
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    depends_on: [influxdb]

  renderer:
    image: grafana/grafana-image-renderer:2.0.0
    restart: unless-stopped

  kapacitor:
    image: kapacitor:1.5
    restart: unless-stopped
    volumes:
      - /opt/kapacitor/storage:/var/lib/kapacitor
    labels:
      - "traefik.enable=false"
    environment:
      # https://docs.influxdata.com/kapacitor/v1.5/administration/configuration/#kapacitor-environment-variables
      - KAPACITOR_INFLUXDB_0_URLS_0=http://influxdb:8086
      - KAPACITOR_INFLUXDB_0_USERNAME=${INFLUXDB_ADMIN_USER}
      - KAPACITOR_INFLUXDB_0_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - KAPACITOR_HTTP_SHARED_SECRET=${INFLUXDB_HTTP_SHARED_SECRET}
      # Slack integration
      - KAPACITOR_SLACK_0_ENABLED=TRUE
      - KAPACITOR_SLACK_0_WORKSPACE=${SLACK_WORKSPACE}
      - KAPACITOR_SLACK_0_URL=${SLACK_URL}
      - KAPACITOR_SLACK_0_CHANNEL=${SLACK_CHANNEL}
      - KAPACITOR_SLACK_0_USERNAME=kapacitor
      # Telegram integration
      - KAPACITOR_TELEGRAM_ENABLED=true
      - KAPACITOR_TELEGRAM_URL=https://api.telegram.org/bot
      - KAPACITOR_TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - KAPACITOR_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      # Email integration
      - KAPACITOR_SMTP_ENABLED=true
      - KAPACITOR_SMTP_HOST=${SMTP_HOST}
      - KAPACITOR_SMTP_PORT=${SMTP_PORT}
      - KAPACITOR_SMTP_FROM=${EMAIL_FROM}
    depends_on: [influxdb]


  telegraf:
    image: telegraf:1.14
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
    depends_on: [influxdb]


  telegraf-owm:
    image: telegraf:1.15.1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/telegraf-owm.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
      - OPEN_WEATHER_MAP_API_KEY=${OPEN_WEATHER_MAP_API_KEY}
    depends_on: [influxdb]


  cadvisor:
    image: google/cadvisor:v0.33.0
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.${BASE_DOMAIN}`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls.certresolver=letsencrypt"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor-auth"
      - "traefik.http.middlewares.cadvisor-auth.basicauth.users=joan:$$2y$$05$$LJEWyCCFuKVJ/rrDj/H8g.wHsjml8LyM8BjRlo.QHxmpn8qZzJwH6"
    environment:
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
    command:
      # https://github.com/google/cadvisor/blob/master/docs/runtime_options.md
      - --docker_only=true
      - --storage_driver=influxdb
      - --storage_driver_db=cadvisor
      - --storage_driver_host=influxdb:8086
      - --storage_driver_user=${INFLUXDB_WRITE_USER}
      - --storage_driver_password=${INFLUXDB_WRITE_USER_PASSWORD}
      - --storage_driver_influxdb_retention_policy=monitor
    depends_on: [influxdb]

  ## As my host provider does not allow me to send emails using SMTP y developed a smtp-to-gmail-api gateway
  mail-server:
    image: jfisbein/smtp-gmail-api:0.0.4
    restart: unless-stopped
    volumes:
      - /opt/smtp-gmail-api/credentials.json:/tmp/credentials.json
      - /opt/smtp-gmail-api/tokens:/tmp/tokens
    labels:
      - "traefik.enable=false"
    command: ["--port", "${SMTP_PORT}", "--credentials", "/tmp/credentials.json", "--tokens", "/tmp/tokens"]
